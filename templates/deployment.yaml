apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
  namespace: {{ .Values.nameSpace }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: default
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.application.name }}-{{ .Values.env }}.properties

        # Conditional PVC Volume
        {{- if .Values.usePVC }}
        - name: app-pvc-volume
          persistentVolumeClaim:
            claimName: {{ .Values.pvc.name }}
        {{- end }}

        # Conditional Certificate Volumes
        {{- if .Values.certificates.enabled }}
        - name: cert1-volume
          configMap:
            name: {{ .Values.certificates.cert1.name }}
        - name: cert2-volume
          configMap:
            name: {{ .Values.certificates.cert2.name }}
        {{- end }}

      containers:
        - name: {{ .Values.application.name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: tcp
              containerPort: {{ .Values.service.port }}
              protocol: TCP

          volumeMounts:
            - mountPath: /workspace/output/{{ .Values.application.name }}
              name: config-volume

            # Conditional PVC VolumeMount
            {{- if .Values.usePVC }}
            - mountPath: /data
              name: app-pvc-volume
            {{- end }}

            # Conditional Certificate VolumeMounts
            {{- if .Values.certificates.enabled }}
            - mountPath: /workspace/output/cert1
              name: cert1-volume
              subPath: certificate.crt
            - mountPath: /workspace/output/cert2
              name: cert2-volume
              subPath: certificate.pfx
            {{- end }}

          env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: TZ
              value: Asia/kolkata
            - name: spring.config.location
              value: /workspace/output/{{ .Values.application.name }}/application-{{ .Values.env }}.properties
            - name: JAVA_OPTIONS
              value: {{.Values.application.javaoptions}}
            - name: JAVA_OPTIONS
              value: '-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dlog4j2.formatMsgNoLookups=true -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/opt/JocataFE_HeapDump.href'
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
